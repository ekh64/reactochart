class AnimatedTreeMapExample extends React.Component {
  state = {getValue: "size"};

  _animateValue = () => {
    if(this.state.getValue === "size")
      this.setState({getValue: "size2"});
    else
      this.setState({getValue: "size"});
  };

  UNSAFE_componentWillMount() {
    this._interval = setInterval(this._animateValue, 1000);
    this._data = {
      children: _.range(1, 5).map(n => ({
        children: _.times(n * n, m => ({
          size:  (n +1) * (m + 1) + (100 * Math.random()),
          size2: (n +1) * (m + 1) + (100 * Math.random())
        }))
      }))
    };
  }
  componentWillUnmount() {
    clearInterval(this._interval);
  }

  render() {
    const {getValue} = this.state;

    const colorScale = d3.scaleLinear()
      .domain([0, 65])
      .range(['#6b6ecf', '#8ca252'])
      .interpolate(d3.interpolateHcl);

    return <div>
      <TreeMap
        data={this._data}
        getValue={getValue}
        getLabel="size"
        nodeStyle={(node) => ({
          backgroundColor: colorScale(parseInt(node.data.size)),
          border: '1px solid #333'
        })}
        sticky
        width={400}
        height={500}
      />
    </div>
  }
}

ReactDOM.render(<AnimatedTreeMapExample />, mountNode);
